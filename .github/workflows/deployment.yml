name: Build and deploy app image

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  APP_IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  LATEST_APP_IMAGE: ghcr.io/${{ github.repository }}:latest

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        run: |
          docker pull ${{ env.LATEST_APP_IMAGE }} > /dev/null || true

          docker build . \
            --cache-from ${{ env.LATEST_APP_IMAGE }} \
            --file .docker/Dockerfile \
            --tag ${{ env.APP_IMAGE }} \
            --tag ${{ env.LATEST_APP_IMAGE }}

          docker push ${{ env.APP_IMAGE }} > /dev/null
          docker push ${{ env.LATEST_APP_IMAGE }} > /dev/null

  deploy_app:
    runs-on: ubuntu-latest
    needs: [ build_image ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy app image
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.USER_PRIVATE_KEY }}" | ssh-add -

          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

          scp ./.docker/docker-compose.yml ${{ secrets.USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}

          ssh ${{ secrets.USER }}@${{ secrets.SERVER_IP }} " \
            set -e; \

            cd ${{ secrets.DEPLOY_DIR }}; \

            export APP_IMAGE=${{ env.APP_IMAGE }}; \

            docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}; \

            docker pull ${{ env.APP_IMAGE }} > /dev/null; \
            docker-compose up --detach --remove-orphans; \

            docker logout ${{ env.REGISTRY }}; \
          "
